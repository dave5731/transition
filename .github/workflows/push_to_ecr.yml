# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Push to ECR

env:
  AWS_REGION: "us-east-1"                     # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: nubix           # set this to your Amazon ECR repository name
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Configure AWS credentials 
     # Programmatic authentication to aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION_KEY}}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Secondary Level LS
      run: |
        ls /var/lib/docker/tmp/buildkit-mount832663598
    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: nubix/ci_cd_exp
        registry: ${{ steps.login-ecr.outputs.registry }}
      env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
